// <auto-generated />
using System;
using BackEndDotNetValidation.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackEndDotNetValidation.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240223152518_AddInitDb")]
    partial class AddInitDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BackEndDotNetValidation.Entities.Classroom", b =>
                {
                    b.Property<int>("IdClassroom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClassroom"));

                    b.Property<string>("MaClassroom")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("NameClassroom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdClassroom");

                    b.ToTable("Clasroom", (string)null);
                });

            modelBuilder.Entity("BackEndDotNetValidation.Entities.Student", b =>
                {
                    b.Property<int>("IdStudent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStudent"));

                    b.Property<DateTime>("BirthOfDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaStudent")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdStudent");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("BackEndDotNetValidation.Entities.StudentClassroom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdClassroom")
                        .HasColumnType("int");

                    b.Property<int>("IdStudent")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdClassroom");

                    b.HasIndex("IdStudent");

                    b.ToTable("StudentClassroom", (string)null);
                });

            modelBuilder.Entity("BackEndDotNetValidation.Entities.StudentClassroom", b =>
                {
                    b.HasOne("BackEndDotNetValidation.Entities.Classroom", "classroom")
                        .WithMany()
                        .HasForeignKey("IdClassroom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_StudentClassroom_Classroom");

                    b.HasOne("BackEndDotNetValidation.Entities.Student", "student")
                        .WithMany()
                        .HasForeignKey("IdStudent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_StudentClassroom_Student");

                    b.Navigation("classroom");

                    b.Navigation("student");
                });
#pragma warning restore 612, 618
        }
    }
}
